- name: Populate service facts
  ansible.builtin.service_facts:

- name: Ensure group "kafka" exists
  become: true
  group:
    name: kafka
    state: present

- name: Ensure user "kafka" exists
  become: true
  user:
    name: kafka
    home: /opt/kafka
    state: present
    group: kafka

- name: Create kafka home directory
  become: true
  file:
    path: /opt/kafka
    state: directory
    mode: 0755
    owner: kafka
    group: kafka

- name: Download kafka
  become: true
  get_url:
    url: https://archive.apache.org/dist/kafka/3.3.1/kafka_2.12-3.3.1.tgz
    dest: ~/kafka.tgz
    force: true
  when: ansible_facts.services['kafka.service'] is not defined and ansible_facts.services['zookeeper.service'] is not defined

- name: Decompress kafka
  become: true
  become_user: root
  command: bash -c "tar xzvf ~/kafka.tgz -C /opt/kafka --strip-components=1"
  when: ansible_facts.services['kafka.service'] is not defined and ansible_facts.services['zookeeper.service'] is not defined

- name: Chown kafka binaries
  become: true
  file:
    dest: /opt/kafka
    owner: kafka
    group: kafka
    recurse: yes
  when: ansible_facts.services['kafka.service'] is not defined and ansible_facts.services['zookeeper.service'] is not defined

- name: Install JRE
  become: true
  apt:
    name: openjdk-17-jdk-headless
    state: latest

- name: Copy config file with owner and permissions
  become: true
  register: service_conf
  template:
    src: zookeeper.properties.j2
    dest: /opt/kafka/config/zookeeper.properties
    owner: kafka
    group: kafka
    mode: 0644

- name: Create zookeeper state directory
  become: true
  file:
    path: /opt/kafka/zookeeper
    state: directory
    mode: 0755
    owner: kafka
    group: kafka

- name: Create myid file
  become: true
  command: bash -c "echo "{{ ansible_facts.eth0.ipv4.address.split(".")[3]}}" > /opt/kafka/zookeeper/myid"

- name: Copy service file with owner and permissions
  become: true
  copy:
    src: zookeeper.service
    dest: /etc/systemd/system/zookeeper.service
    owner: root
    group: root
    mode: 0644

- name: Restart the zookeeper daemon
  become: true
  systemd:
    name: zookeeper
    state: restarted

- name: Ensure the zookeeper daemon is enabled
  become: true
  systemd:
    name: zookeeper
    state: started
    enabled: yes
    daemon_reload: yes

- name: Copy config file with owner and permissions
  become: true
  template:
    src: server.properties.j2
    dest: /opt/kafka/config/server.properties
    owner: kafka
    group: kafka
    mode: 0644

- name: Create kafka logs directory
  become: true
  file:
    path: /opt/kafka/kafka-logs
    state: directory
    mode: 0755
    owner: kafka
    group: kafka

- name: Copy service file with owner and permissions
  become: true
  copy:
    src: kafka.service
    dest: /etc/systemd/system/kafka.service
    owner: root
    group: root
    mode: 0644

- name: Restart the kafka daemon
  become: true
  systemd:
    name: kafka
    state: restarted

- name: Ensure the kafka daemon is enabled
  become: true
  systemd:
    name: kafka
    state: started
    enabled: yes
    daemon_reload: yes

- name: Create user_tags topic
  command:
    cmd: "/opt/kafka/bin/kafka-topics.sh --bootstrap-server localhost:9092 --create --if-not-exists --topic user_tags --partitions 6"
